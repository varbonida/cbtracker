var week=7,month=30,gasCost=82e-5,$table=$("#table-result tbody");async function testSimulate(){$("#btn-simulate").prop("disabled",!0);const t=$("#combat-character").val(),e=$("#combat-weapon").val(),a=$("#combat-stamina").val();$table.html("");try{if(!t)throw Error("Please enter a character.");if(!e)throw Error("Please enter a weapon.");if(!a)throw Error("Please select a stamina multiplier.");$table.html('<tr><td class="text-white text-center" colspan="13">Calculating....</span></tr>');const r=await fetchFightGasOffset(),n=await fetchFightBaseline(),l=characterFromContract(t,await getCharacterData(t)),c=weaponFromContract(e,await getWeaponData(e)),o=await characterTargets(t,e),i=await getEnemyDetails(o),d=await Promise.all(i.map(async t=>{const e=getAlignedCharacterPower(l,c);return{enemy:t,skill:fromEther(await usdToSkill(web3.utils.toBN(Number(r)+Number(n)*Math.sqrt(parseInt(t.power)/1e3)*parseInt(a)))),exp:Math.floor(t.power/e*32)*parseInt(a)}}));let m=0,p=0,w=0,h=0;d.forEach(t=>{const e=Number(t.skill),a=Number(t.exp);0===m&&(m=e),e>p&&(p=e),e<m&&(m=e),0===w&&(w=a),a>h&&(h=a),a<w&&(w=a)}),$table.html("");for(var s=parseInt(288/(40*a));s>0;s--)$table.append(` <tr>\n                                <td class="text-white">${s}</td>\n                                <td class="text-success">${parseFloat(m*s).toFixed(6)}</td>\n                                <td class="text-success">${parseFloat(p*s).toFixed(6)}</td>\n                                <td class="text-warning">${parseInt(w*s)}</td>\n                                <td class="text-warning">${parseInt(h*s)}</td>\n                                <td class="text-success">${parseFloat(m*s*week).toFixed(6)}</td>\n                                <td class="text-success">${parseFloat(p*s*week).toFixed(6)}</td>\n                                <td class="text-warning">${parseInt(w*s*week)}</td>\n                                <td class="text-warning">${parseInt(h*s*week)}</td>\n                                <td class="text-success">${parseFloat(m*s*month).toFixed(6)}</td>\n                                <td class="text-success">${parseFloat(p*s*month).toFixed(6)}</td>\n                                <td class="text-warning">${parseInt(w*s*month)}</td>\n                                <td class="text-warning">${parseInt(h*s*month)}</td>\n                            </tr>`);$("#btn-simulate").removeAttr("disabled")}catch(t){alert(t.message),$("#btn-simulate").removeAttr("disabled")}}